{"ast":null,"code":"import { FETCH_ALL_SETTINGS, FETCH_ONE_SETTING, EDIT_SETTINGS, CREATE_SETTINGS, DELETE_SETTING } from '../constants/actionTypes';\n\nconst reducers = (settings = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL_SETTINGS:\n      return action.payload;\n\n    case FETCH_ONE_SETTING:\n      return settings.map(setting => setting._id === action.payload._id ? action.payload : setting);\n\n    case CREATE_SETTINGS:\n      return [...settings, action.payload];\n\n    case EDIT_SETTINGS:\n      return settings.map(setting => setting._id === action.payload._id ? action.payload : setting);\n\n    case DELETE_SETTING:\n      return settings.filter(setting => setting._id !== action.payload);\n\n    default:\n      return settings;\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/reducers/settings.js"],"names":["FETCH_ALL_SETTINGS","FETCH_ONE_SETTING","EDIT_SETTINGS","CREATE_SETTINGS","DELETE_SETTING","reducers","settings","action","type","payload","map","setting","_id","filter"],"mappings":"AAAA,SACCA,kBADD,EAECC,iBAFD,EAGCC,aAHD,EAICC,eAJD,EAKCC,cALD,QAMO,0BANP;;AAQA,MAAMC,QAAQ,GAAG,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,MAAhB,KAA2B;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,kBAAL;AACC,aAAOO,MAAM,CAACE,OAAd;;AACD,SAAKR,iBAAL;AACC,aAAOK,QAAQ,CAACI,GAAT,CAAcC,OAAD,IACnBA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACE,OAAP,CAAeG,GAA/B,GAAqCL,MAAM,CAACE,OAA5C,GAAsDE,OADhD,CAAP;;AAGD,SAAKR,eAAL;AACC,aAAO,CAAC,GAAGG,QAAJ,EAAcC,MAAM,CAACE,OAArB,CAAP;;AACD,SAAKP,aAAL;AACC,aAAOI,QAAQ,CAACI,GAAT,CAAcC,OAAD,IACnBA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACE,OAAP,CAAeG,GAA/B,GAAqCL,MAAM,CAACE,OAA5C,GAAsDE,OADhD,CAAP;;AAGD,SAAKP,cAAL;AACC,aAAOE,QAAQ,CAACO,MAAT,CAAiBF,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACE,OAApD,CAAP;;AACD;AACC,aAAOH,QAAP;AAhBF;AAkBA,CAnBD;;AAqBA,eAAeD,QAAf","sourcesContent":["import {\n\tFETCH_ALL_SETTINGS,\n\tFETCH_ONE_SETTING,\n\tEDIT_SETTINGS,\n\tCREATE_SETTINGS,\n\tDELETE_SETTING,\n} from '../constants/actionTypes';\n\nconst reducers = (settings = [], action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_ALL_SETTINGS:\n\t\t\treturn action.payload;\n\t\tcase FETCH_ONE_SETTING:\n\t\t\treturn settings.map((setting) =>\n\t\t\t\tsetting._id === action.payload._id ? action.payload : setting,\n\t\t\t);\n\t\tcase CREATE_SETTINGS:\n\t\t\treturn [...settings, action.payload];\n\t\tcase EDIT_SETTINGS:\n\t\t\treturn settings.map((setting) =>\n\t\t\t\tsetting._id === action.payload._id ? action.payload : setting,\n\t\t\t);\n\t\tcase DELETE_SETTING:\n\t\t\treturn settings.filter((setting) => setting._id !== action.payload);\n\t\tdefault:\n\t\t\treturn settings;\n\t}\n};\n\nexport default reducers;\n"]},"metadata":{},"sourceType":"module"}