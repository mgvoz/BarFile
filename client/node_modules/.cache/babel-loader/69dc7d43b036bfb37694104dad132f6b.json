{"ast":null,"code":"var _jsxFileName = \"/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { saveItem, editItem } from '../actions/inventory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Inventory({\n  items,\n  settings\n}) {\n  _s();\n\n  var _user$result, _user$result2, _user$result3, _thisUsersSettings$, _thisUsersSettings$$d, _thisUsersSettings$2, _thisUsersSettings$2$, _thisUsersSettings$3, _thisUsersSettings$4, _thisUsersSettings$5, _thisUsersSettings$6, _thisUsersSettings$7, _thisUsersSettings$8, _thisUsersSettings$9, _thisUsersSettings$10;\n\n  /*****************************************************\n  - add onChange event to slider to show quantity and add to state\n  - add API product lookup to add product name to state\n  - add functionality to select individual items and save them with itemData state- replace 'this product' in form with product selected\n   \n  ******************************************************/\n  //set variables\n  var w = window.innerWidth;\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [scannedItems, setScannedItems] = useState([]);\n  const [itemData, setItemData] = useState({\n    nameOfUser: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name,\n    creator: (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.googleId) || (user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3._id),\n    lastUpdated: new Date().toDateString(),\n    quantityRemaining: '',\n    category: '',\n    distributer: '',\n    nameOfItem: ''\n  }); //get current user's items\n\n  const thisUsersItems = items.filter(i => {\n    var _user$result4, _user$result5;\n\n    return (user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4.googleId) === (i === null || i === void 0 ? void 0 : i.creator) || (user === null || user === void 0 ? void 0 : (_user$result5 = user.result) === null || _user$result5 === void 0 ? void 0 : _user$result5._id) === (i === null || i === void 0 ? void 0 : i.creator);\n  }); //get current user's settings\n\n  const thisUsersSettings = settings.filter(s => {\n    var _user$result6, _user$result7;\n\n    return (user === null || user === void 0 ? void 0 : (_user$result6 = user.result) === null || _user$result6 === void 0 ? void 0 : _user$result6.googleId) === (s === null || s === void 0 ? void 0 : s.creator) || (user === null || user === void 0 ? void 0 : (_user$result7 = user.result) === null || _user$result7 === void 0 ? void 0 : _user$result7._id) === (s === null || s === void 0 ? void 0 : s.creator);\n  });\n  const distributers = (_thisUsersSettings$ = thisUsersSettings[0]) === null || _thisUsersSettings$ === void 0 ? void 0 : (_thisUsersSettings$$d = _thisUsersSettings$.distributers[0]) === null || _thisUsersSettings$$d === void 0 ? void 0 : _thisUsersSettings$$d.split(', ');\n  const categories = (_thisUsersSettings$2 = thisUsersSettings[0]) === null || _thisUsersSettings$2 === void 0 ? void 0 : (_thisUsersSettings$2$ = _thisUsersSettings$2.categories[0]) === null || _thisUsersSettings$2$ === void 0 ? void 0 : _thisUsersSettings$2$.split(', '); //access camera on device and stream\n\n  var video = document.getElementById('video');\n\n  const getVideoStream = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      document.getElementById('video').srcObject = stream;\n    }).catch(error => console.log(error));\n  }; //scan barcode from live camera stream\n\n\n  const barcodeDetector = new window.BarcodeDetector({\n    formats: ['ean_13', 'ean_8', 'upc_a', 'upc_e', 'code_128', 'code_39', 'code_93', 'codabar', 'itf']\n  });\n\n  const findBarcode = () => {\n    barcodeDetector.detect(document.getElementById('video')).then(data => {\n      if (data.length > 0) {\n        code = data[0].rawValue;\n        apiLookup(code);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  let code;\n  let key = '91990a226f804b428cb02a40c9f5b1d9';\n\n  const apiLookup = code => {\n    const url = 'https://api.apigenius.io/products/lookup?upc=' + code + '&api_key=' + key;\n    fetch(url, {\n      mode: 'no-cors'\n    }).then(response => {\n      //response.text();\n      setScannedItems([...scannedItems, response.text() //?.items?.title,\n      ]);\n    }).catch(err => console.log(err));\n  };\n\n  setInterval(findBarcode, 2000); //slider/form\n\n  const saveItemData = () => {\n    const match = thisUsersItems.filter(item => item.nameOfItem === itemData.nameOfItem);\n\n    if (match) {\n      dispatch(editItem(match._id, { ...itemData\n      }));\n    } else {\n      dispatch(saveItem({\n        itemData\n      }));\n    }\n\n    alert('Item quantity saved successfully.');\n  };\n\n  console.log(itemData);\n  console.log(scannedItems);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: w > 480 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nav-section\",\n          className: \"col-3\",\n          children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"dash-heading\",\n            children: \"Take Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"dash-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"take-inventory\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"barcode-p\",\n              children: \"Scan barcode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n              children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                id: \"video\",\n                className: \"video-view\",\n                autoPlay: true,\n                onCanPlay: getVideoStream(),\n                children: \"Video stream not available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"barcode-p\",\n                children: \"Scanned item(s):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-info\",\n                children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                  children: scannedItems.map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"info-text\",\n                    children: '  ' + item\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 13\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-scans\",\n                onClick: () => setScannedItems([]),\n                children: \"Clear Scanned Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"set-amt\",\n                children: [\"Click on a scanned item above, and use the slider below to represent quantity remaining. If the quantity remaining is at or below your set threshold, this item will be added to you order list.\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"Your threshold is currently\", ' ', ((_thisUsersSettings$3 = thisUsersSettings[0]) === null || _thisUsersSettings$3 === void 0 ? void 0 : _thisUsersSettings$3.threshold) === undefined ? 'unspecified. Please go to Settings to set your threshold' : ((_thisUsersSettings$4 = thisUsersSettings[0]) === null || _thisUsersSettings$4 === void 0 ? void 0 : _thisUsersSettings$4.threshold) + '%', \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btl-img\",\n                  children: \"(bottle shape and slider here, onClick of item above, show bottle shape, store item info and quatity to DB)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: saveItemData,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"quantity\",\n                  children: [\"Quantity: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: +'%'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Which distributer do you typically order this product from?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"distributer\",\n                  id: \"distributer-select\",\n                  onChange: e => setItemData({ ...itemData,\n                    distributer: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    defaultValue: true,\n                    disabled: true,\n                    children: \"Select Distributer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 12\n                  }, this), ((_thisUsersSettings$5 = thisUsersSettings[0]) === null || _thisUsersSettings$5 === void 0 ? void 0 : _thisUsersSettings$5.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"No Distributers Available - Set your Distributers on the Settings Page.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 13\n                  }, this) : distributers === null || distributers === void 0 ? void 0 : distributers.map((dist, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: dist,\n                    children: dist\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 15\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Which category does this product belong to?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"category\",\n                  id: \"category-select\",\n                  onChange: e => setItemData({ ...itemData,\n                    category: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    defaultValue: true,\n                    disabled: true,\n                    children: \"Select Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 12\n                  }, this), ((_thisUsersSettings$6 = thisUsersSettings[0]) === null || _thisUsersSettings$6 === void 0 ? void 0 : _thisUsersSettings$6.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"No Categories Available - Set your Categories on the Settings Page.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 13\n                  }, this) : categories === null || categories === void 0 ? void 0 : categories.map((cat, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: cat,\n                    children: cat\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 14\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"save-quantity\",\n                  type: \"submit\",\n                  children: \"Save This Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inventory-container-m\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dash-heading-m\",\n          children: \"Take Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"dash-line-m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"take-inventory\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"barcode-p\",\n            children: \"Scan barcode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              id: \"video\",\n              className: \"video-view\",\n              autoPlay: true,\n              onCanPlay: getVideoStream(),\n              children: \"Video stream not available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"barcode-p\",\n              children: \"Scanned item(s):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-info\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                children: scannedItems.map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"info-text\",\n                  children: '  ' + item\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 12\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-scans-m\",\n              onClick: () => setScannedItems([]),\n              children: \"Clear Scanned Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"set-amt-m\",\n              children: [\"Click on a scanned item above, and use the slider below to represent quantity remaining. If the quantity remaining is at or below your set threshold, this item will be added to you order list.\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Your threshold is currently\", ' ', ((_thisUsersSettings$7 = thisUsersSettings[0]) === null || _thisUsersSettings$7 === void 0 ? void 0 : _thisUsersSettings$7.threshold) === undefined ? 'unspecified. Please go to Settings to set your threshold' : ((_thisUsersSettings$8 = thisUsersSettings[0]) === null || _thisUsersSettings$8 === void 0 ? void 0 : _thisUsersSettings$8.threshold) + '%', \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btl-img\",\n                children: \"(bottle shape and slider here, onClick of item above, show bottle shape, store item info and quatity to DB)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: saveItemData,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"quantity\",\n                children: [\"Quantity: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: +'%'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Which distributer do you typically order this product from?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"distributer\",\n                id: \"distributer-select-m\",\n                onChange: e => setItemData({ ...itemData,\n                  distributer: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  defaultValue: true,\n                  disabled: true,\n                  children: \"Select Distributer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 11\n                }, this), ((_thisUsersSettings$9 = thisUsersSettings[0]) === null || _thisUsersSettings$9 === void 0 ? void 0 : _thisUsersSettings$9.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"No Distributers Available - Set your Distributers on the Settings Page.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 12\n                }, this) : distributers === null || distributers === void 0 ? void 0 : distributers.map((dist, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dist,\n                  children: dist\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 13\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Which category does this product belong to?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"category\",\n                id: \"category-select-m\",\n                onChange: e => setItemData({ ...itemData,\n                  category: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  defaultValue: true,\n                  disabled: true,\n                  children: \"Select Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 11\n                }, this), ((_thisUsersSettings$10 = thisUsersSettings[0]) === null || _thisUsersSettings$10 === void 0 ? void 0 : _thisUsersSettings$10.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"No Categories Available - Set your Categories on the Settings Page.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 12\n                }, this) : categories === null || categories === void 0 ? void 0 : categories.map((cat, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 13\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-quantity-m\",\n                type: \"submit\",\n                children: \"Save This Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Inventory, \"IWQxmVs0iSGXmNw+tFDmoY+yefo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Inventory;\nexport default Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Inventory.js"],"names":["React","useState","Navbar","useDispatch","saveItem","editItem","Inventory","items","settings","w","window","innerWidth","dispatch","user","JSON","parse","localStorage","getItem","scannedItems","setScannedItems","itemData","setItemData","nameOfUser","result","name","creator","googleId","_id","lastUpdated","Date","toDateString","quantityRemaining","category","distributer","nameOfItem","thisUsersItems","filter","i","thisUsersSettings","s","distributers","split","categories","video","document","getElementById","getVideoStream","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","error","console","log","barcodeDetector","BarcodeDetector","formats","findBarcode","detect","data","length","code","rawValue","apiLookup","e","key","url","fetch","mode","response","text","err","setInterval","saveItemData","match","item","alert","map","threshold","undefined","target","value","dist","cat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { saveItem, editItem } from '../actions/inventory';\n\nfunction Inventory({ items, settings }) {\n\t/*****************************************************\n\t- add onChange event to slider to show quantity and add to state\n\t- add API product lookup to add product name to state\n\t- add functionality to select individual items and save them with itemData state- replace 'this product' in form with product selected\n\t \n\t******************************************************/\n\n\t//set variables\n\tvar w = window.innerWidth;\n\tconst dispatch = useDispatch();\n\tconst user = JSON.parse(localStorage.getItem('profile'));\n\tconst [scannedItems, setScannedItems] = useState([]);\n\tconst [itemData, setItemData] = useState({\n\t\tnameOfUser: user?.result?.name,\n\t\tcreator: user?.result?.googleId || user?.result?._id,\n\t\tlastUpdated: new Date().toDateString(),\n\t\tquantityRemaining: '',\n\t\tcategory: '',\n\t\tdistributer: '',\n\t\tnameOfItem: '',\n\t});\n\n\t//get current user's items\n\tconst thisUsersItems = items.filter(\n\t\t(i) =>\n\t\t\tuser?.result?.googleId === i?.creator ||\n\t\t\tuser?.result?._id === i?.creator,\n\t);\n\n\t//get current user's settings\n\tconst thisUsersSettings = settings.filter(\n\t\t(s) =>\n\t\t\tuser?.result?.googleId === s?.creator ||\n\t\t\tuser?.result?._id === s?.creator,\n\t);\n\n\tconst distributers = thisUsersSettings[0]?.distributers[0]?.split(', ');\n\tconst categories = thisUsersSettings[0]?.categories[0]?.split(', ');\n\n\t//access camera on device and stream\n\tvar video = document.getElementById('video');\n\n\tconst getVideoStream = () => {\n\t\tnavigator.mediaDevices\n\t\t\t.getUserMedia({ video: true })\n\t\t\t.then((stream) => {\n\t\t\t\tdocument.getElementById('video').srcObject = stream;\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n\n\t//scan barcode from live camera stream\n\n\tconst barcodeDetector = new window.BarcodeDetector({\n\t\tformats: [\n\t\t\t'ean_13',\n\t\t\t'ean_8',\n\t\t\t'upc_a',\n\t\t\t'upc_e',\n\t\t\t'code_128',\n\t\t\t'code_39',\n\t\t\t'code_93',\n\t\t\t'codabar',\n\t\t\t'itf',\n\t\t],\n\t});\n\n\tconst findBarcode = () => {\n\t\tbarcodeDetector\n\t\t\t.detect(document.getElementById('video'))\n\t\t\t.then((data) => {\n\t\t\t\tif (data.length > 0) {\n\t\t\t\t\tcode = data[0].rawValue;\n\t\t\t\t\tapiLookup(code);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\tlet code;\n\tlet key = '91990a226f804b428cb02a40c9f5b1d9';\n\tconst apiLookup = (code) => {\n\t\tconst url =\n\t\t\t'https://api.apigenius.io/products/lookup?upc=' +\n\t\t\tcode +\n\t\t\t'&api_key=' +\n\t\t\tkey;\n\t\tfetch(url, {\n\t\t\tmode: 'no-cors',\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\t//response.text();\n\t\t\t\tsetScannedItems([\n\t\t\t\t\t...scannedItems,\n\t\t\t\t\tresponse.text(), //?.items?.title,\n\t\t\t\t]);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tsetInterval(findBarcode, 2000);\n\n\t//slider/form\n\tconst saveItemData = () => {\n\t\tconst match = thisUsersItems.filter(\n\t\t\t(item) => item.nameOfItem === itemData.nameOfItem,\n\t\t);\n\t\tif (match) {\n\t\t\tdispatch(editItem(match._id, { ...itemData }));\n\t\t} else {\n\t\t\tdispatch(saveItem({ itemData }));\n\t\t}\n\t\talert('Item quantity saved successfully.');\n\t};\n\n\tconsole.log(itemData);\n\tconsole.log(scannedItems);\n\n\treturn (\n\t\t<>\n\t\t\t{w > 480 ? (\n\t\t\t\t<div className='inventory-container'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div id='nav-section' className='col-3'>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='col-9'>\n\t\t\t\t\t\t\t<h1 className='dash-heading'>Take Inventory</h1>\n\t\t\t\t\t\t\t<hr className='dash-line' />\n\t\t\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t\t\t<p className='barcode-p'>Scan barcode:</p>\n\t\t\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\t\tid='video'\n\t\t\t\t\t\t\t\t\t\tclassName='video-view'\n\t\t\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\t\t\tonCanPlay={getVideoStream()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tVideo stream not available.\n\t\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t\t<p className='barcode-p'>\n\t\t\t\t\t\t\t\t\t\tScanned item(s):\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<div className='item-info'>\n\t\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t\t{scannedItems.map((item, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='info-text'\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{'  ' + item}\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='clear-scans'\n\t\t\t\t\t\t\t\t\t\tonClick={() => setScannedItems([])}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tClear Scanned Items\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<div className='set-amt'>\n\t\t\t\t\t\t\t\t\t\tClick on a scanned item above, and use\n\t\t\t\t\t\t\t\t\t\tthe slider below to represent quantity\n\t\t\t\t\t\t\t\t\t\tremaining. If the quantity remaining is\n\t\t\t\t\t\t\t\t\t\tat or below your set threshold, this\n\t\t\t\t\t\t\t\t\t\titem will be added to you order list.{' '}\n\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\tYour threshold is currently{' '}\n\t\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.threshold ===\n\t\t\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t\t\t\t\t? 'unspecified. Please go to Settings to set your threshold'\n\t\t\t\t\t\t\t\t\t\t\t\t: thisUsersSettings[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t?.threshold + '%'}\n\t\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t\t\t<div className='btl-img'>\n\t\t\t\t\t\t\t\t\t\t\t(bottle shape and slider here,\n\t\t\t\t\t\t\t\t\t\t\tonClick of item above, show bottle\n\t\t\t\t\t\t\t\t\t\t\tshape, store item info and quatity\n\t\t\t\t\t\t\t\t\t\t\tto DB)\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<form onSubmit={saveItemData}>\n\t\t\t\t\t\t\t\t\t\t<p className='quantity'>\n\t\t\t\t\t\t\t\t\t\t\tQuantity: <b>{+'%'}</b>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tWhich distributer do you typically\n\t\t\t\t\t\t\t\t\t\t\torder this product from?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tname='distributer'\n\t\t\t\t\t\t\t\t\t\t\tid='distributer-select'\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetItemData({\n\t\t\t\t\t\t\t\t\t\t\t\t\t...itemData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdistributer: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option defaultValue disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect Distributer\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.length ===\n\t\t\t\t\t\t\t\t\t\t\t0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\t\tNo Distributers Available -\n\t\t\t\t\t\t\t\t\t\t\t\t\tSet your Distributers on the\n\t\t\t\t\t\t\t\t\t\t\t\t\tSettings Page.\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\tdistributers?.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(dist, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={dist}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{dist}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tWhich category does this product\n\t\t\t\t\t\t\t\t\t\t\tbelong to?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tname='category'\n\t\t\t\t\t\t\t\t\t\t\tid='category-select'\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetItemData({\n\t\t\t\t\t\t\t\t\t\t\t\t\t...itemData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategory: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option defaultValue disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect Category\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.length ===\n\t\t\t\t\t\t\t\t\t\t\t0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\t\tNo Categories Available -\n\t\t\t\t\t\t\t\t\t\t\t\t\tSet your Categories on the\n\t\t\t\t\t\t\t\t\t\t\t\t\tSettings Page.\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\tcategories?.map((cat, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={cat}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cat}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='save-quantity'\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave This Item\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</center>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<div className='inventory-container-m'>\n\t\t\t\t\t\t<h1 className='dash-heading-m'>Take Inventory</h1>\n\t\t\t\t\t\t<hr className='dash-line-m' />\n\t\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t\t<p className='barcode-p'>Scan barcode:</p>\n\t\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\tid='video'\n\t\t\t\t\t\t\t\t\tclassName='video-view'\n\t\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\t\tonCanPlay={getVideoStream()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tVideo stream not available.\n\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t<p className='barcode-p'>Scanned item(s):</p>\n\t\t\t\t\t\t\t\t<div className='item-info'>\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t{scannedItems.map((item, key) => (\n\t\t\t\t\t\t\t\t\t\t\t<li className='info-text' key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t{'  ' + item}\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='clear-scans-m'\n\t\t\t\t\t\t\t\t\tonClick={() => setScannedItems([])}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClear Scanned Items\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<div className='set-amt-m'>\n\t\t\t\t\t\t\t\t\tClick on a scanned item above, and use the\n\t\t\t\t\t\t\t\t\tslider below to represent quantity\n\t\t\t\t\t\t\t\t\tremaining. If the quantity remaining is at\n\t\t\t\t\t\t\t\t\tor below your set threshold, this item will\n\t\t\t\t\t\t\t\t\tbe added to you order list.{' '}\n\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\tYour threshold is currently{' '}\n\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.threshold ===\n\t\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t\t\t\t? 'unspecified. Please go to Settings to set your threshold'\n\t\t\t\t\t\t\t\t\t\t\t: thisUsersSettings[0]?.threshold +\n\t\t\t\t\t\t\t\t\t\t\t  '%'}\n\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t\t<div className='btl-img'>\n\t\t\t\t\t\t\t\t\t\t(bottle shape and slider here, onClick\n\t\t\t\t\t\t\t\t\t\tof item above, show bottle shape, store\n\t\t\t\t\t\t\t\t\t\titem info and quatity to DB)\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<form onSubmit={saveItemData}>\n\t\t\t\t\t\t\t\t\t<p className='quantity'>\n\t\t\t\t\t\t\t\t\t\tQuantity: <b>{+'%'}</b>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tWhich distributer do you typically order\n\t\t\t\t\t\t\t\t\t\tthis product from?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname='distributer'\n\t\t\t\t\t\t\t\t\t\tid='distributer-select-m'\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetItemData({\n\t\t\t\t\t\t\t\t\t\t\t\t...itemData,\n\t\t\t\t\t\t\t\t\t\t\t\tdistributer: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option defaultValue disabled>\n\t\t\t\t\t\t\t\t\t\t\tSelect Distributer\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.length === 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tNo Distributers Available - Set\n\t\t\t\t\t\t\t\t\t\t\t\tyour Distributers on the\n\t\t\t\t\t\t\t\t\t\t\t\tSettings Page.\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\tdistributers?.map((dist, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={key} value={dist}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{dist}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tWhich category does this product belong\n\t\t\t\t\t\t\t\t\t\tto?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname='category'\n\t\t\t\t\t\t\t\t\t\tid='category-select-m'\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetItemData({\n\t\t\t\t\t\t\t\t\t\t\t\t...itemData,\n\t\t\t\t\t\t\t\t\t\t\t\tcategory: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option defaultValue disabled>\n\t\t\t\t\t\t\t\t\t\t\tSelect Category\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.length === 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tNo Categories Available - Set\n\t\t\t\t\t\t\t\t\t\t\t\tyour Categories on the Settings\n\t\t\t\t\t\t\t\t\t\t\t\tPage.\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\tcategories?.map((cat, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={key} value={cat}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{cat}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='save-quantity-m'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave This Item\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</center>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default Inventory;\n"]},"metadata":{},"sourceType":"module"}