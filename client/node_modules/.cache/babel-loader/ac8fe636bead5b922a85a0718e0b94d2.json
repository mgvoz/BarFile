{"ast":null,"code":"var _jsxFileName = \"/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { saveItem, editItem, deleteItem } from '../actions/inventory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Inventory({\n  items,\n  settings\n}) {\n  _s();\n\n  var _user$result, _user$result2, _user$result3, _thisUsersSettings$, _thisUsersSettings$$d, _thisUsersSettings$2, _thisUsersSettings$2$, _thisUsersSettings$3, _thisUsersSettings$4, _thisUsersSettings$5, _thisUsersSettings$6, _thisUsersSettings$7, _thisUsersSettings$8, _thisUsersSettings$9, _thisUsersSettings$10;\n\n  //set variables\n  var w = window.innerWidth;\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [scannedItems, setScannedItems] = useState([]);\n  const [itemData, setItemData] = useState({\n    nameOfUser: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name,\n    creator: (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.googleId) || (user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3._id),\n    lastUpdated: new Date().toDateString(),\n    quantityRemaining: '',\n    category: '',\n    distributer: '',\n    nameOfItem: ''\n  }); //get current user's settings\n\n  const thisUsersSettings = settings.filter(s => {\n    var _user$result4, _user$result5;\n\n    return (user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4.googleId) === (s === null || s === void 0 ? void 0 : s.creator) || (user === null || user === void 0 ? void 0 : (_user$result5 = user.result) === null || _user$result5 === void 0 ? void 0 : _user$result5._id) === (s === null || s === void 0 ? void 0 : s.creator);\n  });\n  const distributers = (_thisUsersSettings$ = thisUsersSettings[0]) === null || _thisUsersSettings$ === void 0 ? void 0 : (_thisUsersSettings$$d = _thisUsersSettings$.distributers[0]) === null || _thisUsersSettings$$d === void 0 ? void 0 : _thisUsersSettings$$d.split(', ');\n  const categories = (_thisUsersSettings$2 = thisUsersSettings[0]) === null || _thisUsersSettings$2 === void 0 ? void 0 : (_thisUsersSettings$2$ = _thisUsersSettings$2.categories[0]) === null || _thisUsersSettings$2$ === void 0 ? void 0 : _thisUsersSettings$2$.split(', '); //access camera on device and stream\n\n  var video = document.getElementById('video');\n\n  const getVideoStream = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      document.getElementById('video').srcObject = stream;\n    }).catch(error => console.log(error));\n  }; //scan barcode from live camera stream\n\n\n  let formats;\n  window.BarcodeDetector.getSupportedFormats().then(arr => formats = arr);\n  const barcodeDetector = new window.BarcodeDetector({\n    formats\n  });\n\n  const findBarcode = () => {\n    barcodeDetector.detect(document.getElementById('video')).then(data => {\n      if (data.length > 0) {\n        setScannedItems([...scannedItems, data[0].rawValue]);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  setInterval(findBarcode, 3000); //slider/form\n  //add onChange event to slider to update state for quantity\n  //add nameOfItem based on API lookup\n\n  const saveItem = () => {\n    //add if statement\n    dispatch(saveItem({\n      itemData\n    }));\n    dispatch(editItem(thisUsersSettings[0]._id, { ...itemData\n    }));\n    alert('Item quantity saved successfully.');\n  };\n\n  console.log(itemData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: w > 480 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nav-section\",\n          className: \"col-3\",\n          children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"dash-heading\",\n            children: \"Take Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"dash-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"take-inventory\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"barcode-p\",\n              children: \"Scan barcode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n              children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                id: \"video\",\n                className: \"video-view\",\n                autoPlay: true,\n                onCanPlay: getVideoStream(),\n                children: \"Video stream not available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"barcode-p\",\n                children: \"Scanned item(s):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-info\",\n                children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                  children: scannedItems.map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"info-text\",\n                    children: '  ' + item\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 13\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-scans\",\n                onClick: () => setScannedItems([]),\n                children: \"Clear Scanned Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"set-amt\",\n                children: [\"Click on a scanned item above, and use the slider below to represent quantity remaining. If the quantity remaining is at or below your set threshold, this item will be added to you order list.\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"Your threshold is currently\", ' ', ((_thisUsersSettings$3 = thisUsersSettings[0]) === null || _thisUsersSettings$3 === void 0 ? void 0 : _thisUsersSettings$3.threshold) === undefined ? 'unspecified. Please go to Settings to set your threshold' : ((_thisUsersSettings$4 = thisUsersSettings[0]) === null || _thisUsersSettings$4 === void 0 ? void 0 : _thisUsersSettings$4.threshold) + '%', \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btl-img\",\n                  children: \"(bottle shape and slider here, onClick of item above, show bottle shape, store item info and quatity to DB)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: saveItem,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"quantity\",\n                  children: [\"Quantity: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: +'%'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Which distributer do you typically order this product from?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"distributer\",\n                  id: \"distributer-select\",\n                  onChange: e => setItemData({ ...itemData,\n                    distributer: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    defaultValue: true,\n                    selected: true,\n                    disabled: true,\n                    children: \"Select Distributer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 12\n                  }, this), ((_thisUsersSettings$5 = thisUsersSettings[0]) === null || _thisUsersSettings$5 === void 0 ? void 0 : _thisUsersSettings$5.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"No Distributers Available - Set your Distributers on the Settings Page.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 13\n                  }, this) : distributers === null || distributers === void 0 ? void 0 : distributers.map((dist, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: dist,\n                    children: dist\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 15\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Which category does this product belong to?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"category\",\n                  id: \"category-select\",\n                  onChange: e => setItemData({ ...itemData,\n                    category: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    defaultValue: true,\n                    selected: true,\n                    disabled: true,\n                    children: \"Select Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 12\n                  }, this), ((_thisUsersSettings$6 = thisUsersSettings[0]) === null || _thisUsersSettings$6 === void 0 ? void 0 : _thisUsersSettings$6.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"No Categories Available - Set your Categories on the Settings Page.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 13\n                  }, this) : categories === null || categories === void 0 ? void 0 : categories.map((cat, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: cat,\n                    children: cat\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 14\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"save-quantity\",\n                  type: \"submit\",\n                  children: \"Save This Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inventory-container-m\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dash-heading-m\",\n          children: \"Take Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"dash-line-m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"take-inventory\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"barcode-p\",\n            children: \"Scan barcode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              id: \"video\",\n              className: \"video-view\",\n              autoPlay: true,\n              onCanPlay: getVideoStream(),\n              children: \"Video stream not available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"barcode-p\",\n              children: \"Scanned item(s):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-info\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                children: scannedItems.map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"info-text\",\n                  children: '  ' + item\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 12\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-scans-m\",\n              onClick: () => setScannedItems([]),\n              children: \"Clear Scanned Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"set-amt-m\",\n              children: [\"Click on a scanned item above, and use the slider below to represent quantity remaining. If the quantity remaining is at or below your set threshold, this item will be added to you order list.\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Your threshold is currently\", ' ', ((_thisUsersSettings$7 = thisUsersSettings[0]) === null || _thisUsersSettings$7 === void 0 ? void 0 : _thisUsersSettings$7.threshold) === undefined ? 'unspecified. Please go to Settings to set your threshold' : ((_thisUsersSettings$8 = thisUsersSettings[0]) === null || _thisUsersSettings$8 === void 0 ? void 0 : _thisUsersSettings$8.threshold) + '%', \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btl-img\",\n                children: \"(bottle shape and slider here, onClick of item above, show bottle shape, store item info and quatity to DB)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: saveItem,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"quantity\",\n                children: [\"Quantity: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: +'%'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Which distributer do you typically order this product from?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"distributer\",\n                id: \"distributer-select\",\n                onChange: e => setItemData({ ...itemData,\n                  distributer: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  defaultValue: true,\n                  selected: true,\n                  disabled: true,\n                  children: \"Select Distributer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 11\n                }, this), ((_thisUsersSettings$9 = thisUsersSettings[0]) === null || _thisUsersSettings$9 === void 0 ? void 0 : _thisUsersSettings$9.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"No Distributers Available - Set your Distributers on the Settings Page.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 12\n                }, this) : distributers === null || distributers === void 0 ? void 0 : distributers.map((dist, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dist,\n                  children: dist\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 13\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Which category does this product belong to?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"category\",\n                id: \"category-select\",\n                onChange: e => setItemData({ ...itemData,\n                  category: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  defaultValue: true,\n                  selected: true,\n                  disabled: true,\n                  children: \"Select Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 11\n                }, this), ((_thisUsersSettings$10 = thisUsersSettings[0]) === null || _thisUsersSettings$10 === void 0 ? void 0 : _thisUsersSettings$10.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"No Categories Available - Set your Categories on the Settings Page.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 12\n                }, this) : categories === null || categories === void 0 ? void 0 : categories.map((cat, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 13\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-quantity-m\",\n                type: \"submit\",\n                children: \"Save This Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Inventory, \"IWQxmVs0iSGXmNw+tFDmoY+yefo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Inventory;\nexport default Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Inventory.js"],"names":["React","useState","Navbar","useDispatch","saveItem","editItem","deleteItem","Inventory","items","settings","w","window","innerWidth","dispatch","user","JSON","parse","localStorage","getItem","scannedItems","setScannedItems","itemData","setItemData","nameOfUser","result","name","creator","googleId","_id","lastUpdated","Date","toDateString","quantityRemaining","category","distributer","nameOfItem","thisUsersSettings","filter","s","distributers","split","categories","video","document","getElementById","getVideoStream","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","error","console","log","formats","BarcodeDetector","getSupportedFormats","arr","barcodeDetector","findBarcode","detect","data","length","rawValue","e","setInterval","alert","map","item","key","threshold","undefined","target","value","dist","cat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { saveItem, editItem, deleteItem } from '../actions/inventory';\n\nfunction Inventory({ items, settings }) {\n\t//set variables\n\tvar w = window.innerWidth;\n\tconst dispatch = useDispatch();\n\tconst user = JSON.parse(localStorage.getItem('profile'));\n\tconst [scannedItems, setScannedItems] = useState([]);\n\tconst [itemData, setItemData] = useState({\n\t\tnameOfUser: user?.result?.name,\n\t\tcreator: user?.result?.googleId || user?.result?._id,\n\t\tlastUpdated: new Date().toDateString(),\n\t\tquantityRemaining: '',\n\t\tcategory: '',\n\t\tdistributer: '',\n\t\tnameOfItem: '',\n\t});\n\n\t//get current user's settings\n\tconst thisUsersSettings = settings.filter(\n\t\t(s) =>\n\t\t\tuser?.result?.googleId === s?.creator ||\n\t\t\tuser?.result?._id === s?.creator,\n\t);\n\n\tconst distributers = thisUsersSettings[0]?.distributers[0]?.split(', ');\n\tconst categories = thisUsersSettings[0]?.categories[0]?.split(', ');\n\n\t//access camera on device and stream\n\tvar video = document.getElementById('video');\n\n\tconst getVideoStream = () => {\n\t\tnavigator.mediaDevices\n\t\t\t.getUserMedia({ video: true })\n\t\t\t.then((stream) => {\n\t\t\t\tdocument.getElementById('video').srcObject = stream;\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n\n\t//scan barcode from live camera stream\n\tlet formats;\n\twindow.BarcodeDetector.getSupportedFormats().then((arr) => (formats = arr));\n\tconst barcodeDetector = new window.BarcodeDetector({ formats });\n\n\tconst findBarcode = () => {\n\t\tbarcodeDetector\n\t\t\t.detect(document.getElementById('video'))\n\t\t\t.then((data) => {\n\t\t\t\tif (data.length > 0) {\n\t\t\t\t\tsetScannedItems([...scannedItems, data[0].rawValue]);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\tsetInterval(findBarcode, 3000);\n\n\t//slider/form\n\t//add onChange event to slider to update state for quantity\n\t//add nameOfItem based on API lookup\n\tconst saveItem = () => {\n\t\t//add if statement\n\t\tdispatch(saveItem({ itemData }));\n\t\tdispatch(editItem(thisUsersSettings[0]._id, { ...itemData }));\n\t\talert('Item quantity saved successfully.');\n\t};\n\n\tconsole.log(itemData);\n\n\treturn (\n\t\t<>\n\t\t\t{w > 480 ? (\n\t\t\t\t<div className='inventory-container'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div id='nav-section' className='col-3'>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='col-9'>\n\t\t\t\t\t\t\t<h1 className='dash-heading'>Take Inventory</h1>\n\t\t\t\t\t\t\t<hr className='dash-line' />\n\t\t\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t\t\t<p className='barcode-p'>Scan barcode:</p>\n\t\t\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\t\tid='video'\n\t\t\t\t\t\t\t\t\t\tclassName='video-view'\n\t\t\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\t\t\tonCanPlay={getVideoStream()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tVideo stream not available.\n\t\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t\t<p className='barcode-p'>\n\t\t\t\t\t\t\t\t\t\tScanned item(s):\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<div className='item-info'>\n\t\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t\t{scannedItems.map((item, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='info-text'\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{'  ' + item}\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='clear-scans'\n\t\t\t\t\t\t\t\t\t\tonClick={() => setScannedItems([])}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tClear Scanned Items\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<div className='set-amt'>\n\t\t\t\t\t\t\t\t\t\tClick on a scanned item above, and use\n\t\t\t\t\t\t\t\t\t\tthe slider below to represent quantity\n\t\t\t\t\t\t\t\t\t\tremaining. If the quantity remaining is\n\t\t\t\t\t\t\t\t\t\tat or below your set threshold, this\n\t\t\t\t\t\t\t\t\t\titem will be added to you order list.{' '}\n\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\tYour threshold is currently{' '}\n\t\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.threshold ===\n\t\t\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t\t\t\t\t? 'unspecified. Please go to Settings to set your threshold'\n\t\t\t\t\t\t\t\t\t\t\t\t: thisUsersSettings[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t?.threshold + '%'}\n\t\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t\t\t<div className='btl-img'>\n\t\t\t\t\t\t\t\t\t\t\t(bottle shape and slider here,\n\t\t\t\t\t\t\t\t\t\t\tonClick of item above, show bottle\n\t\t\t\t\t\t\t\t\t\t\tshape, store item info and quatity\n\t\t\t\t\t\t\t\t\t\t\tto DB)\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<form onSubmit={saveItem}>\n\t\t\t\t\t\t\t\t\t\t<p className='quantity'>\n\t\t\t\t\t\t\t\t\t\t\tQuantity: <b>{+'%'}</b>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tWhich distributer do you typically\n\t\t\t\t\t\t\t\t\t\t\torder this product from?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tname='distributer'\n\t\t\t\t\t\t\t\t\t\t\tid='distributer-select'\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetItemData({\n\t\t\t\t\t\t\t\t\t\t\t\t\t...itemData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdistributer: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue\n\t\t\t\t\t\t\t\t\t\t\t\tselected\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect Distributer\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.length ===\n\t\t\t\t\t\t\t\t\t\t\t0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\t\tNo Distributers Available -\n\t\t\t\t\t\t\t\t\t\t\t\t\tSet your Distributers on the\n\t\t\t\t\t\t\t\t\t\t\t\t\tSettings Page.\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\tdistributers?.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(dist, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={dist}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{dist}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tWhich category does this product\n\t\t\t\t\t\t\t\t\t\t\tbelong to?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tname='category'\n\t\t\t\t\t\t\t\t\t\t\tid='category-select'\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetItemData({\n\t\t\t\t\t\t\t\t\t\t\t\t\t...itemData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategory: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue\n\t\t\t\t\t\t\t\t\t\t\t\tselected\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect Category\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.length ===\n\t\t\t\t\t\t\t\t\t\t\t0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\t\tNo Categories Available -\n\t\t\t\t\t\t\t\t\t\t\t\t\tSet your Categories on the\n\t\t\t\t\t\t\t\t\t\t\t\t\tSettings Page.\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\tcategories?.map((cat, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={cat}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cat}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='save-quantity'\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave This Item\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</center>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<div className='inventory-container-m'>\n\t\t\t\t\t\t<h1 className='dash-heading-m'>Take Inventory</h1>\n\t\t\t\t\t\t<hr className='dash-line-m' />\n\t\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t\t<p className='barcode-p'>Scan barcode:</p>\n\t\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\tid='video'\n\t\t\t\t\t\t\t\t\tclassName='video-view'\n\t\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\t\tonCanPlay={getVideoStream()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tVideo stream not available.\n\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t<p className='barcode-p'>Scanned item(s):</p>\n\t\t\t\t\t\t\t\t<div className='item-info'>\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t{scannedItems.map((item, key) => (\n\t\t\t\t\t\t\t\t\t\t\t<li className='info-text' key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t{'  ' + item}\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='clear-scans-m'\n\t\t\t\t\t\t\t\t\tonClick={() => setScannedItems([])}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClear Scanned Items\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<div className='set-amt-m'>\n\t\t\t\t\t\t\t\t\tClick on a scanned item above, and use the\n\t\t\t\t\t\t\t\t\tslider below to represent quantity\n\t\t\t\t\t\t\t\t\tremaining. If the quantity remaining is at\n\t\t\t\t\t\t\t\t\tor below your set threshold, this item will\n\t\t\t\t\t\t\t\t\tbe added to you order list.{' '}\n\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\tYour threshold is currently{' '}\n\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.threshold ===\n\t\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t\t\t\t? 'unspecified. Please go to Settings to set your threshold'\n\t\t\t\t\t\t\t\t\t\t\t: thisUsersSettings[0]?.threshold +\n\t\t\t\t\t\t\t\t\t\t\t  '%'}\n\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t\t<div className='btl-img'>\n\t\t\t\t\t\t\t\t\t\t(bottle shape and slider here, onClick\n\t\t\t\t\t\t\t\t\t\tof item above, show bottle shape, store\n\t\t\t\t\t\t\t\t\t\titem info and quatity to DB)\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<form onSubmit={saveItem}>\n\t\t\t\t\t\t\t\t\t<p className='quantity'>\n\t\t\t\t\t\t\t\t\t\tQuantity: <b>{+'%'}</b>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tWhich distributer do you typically order\n\t\t\t\t\t\t\t\t\t\tthis product from?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname='distributer'\n\t\t\t\t\t\t\t\t\t\tid='distributer-select'\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetItemData({\n\t\t\t\t\t\t\t\t\t\t\t\t...itemData,\n\t\t\t\t\t\t\t\t\t\t\t\tdistributer: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option defaultValue selected disabled>\n\t\t\t\t\t\t\t\t\t\t\tSelect Distributer\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.length === 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tNo Distributers Available - Set\n\t\t\t\t\t\t\t\t\t\t\t\tyour Distributers on the\n\t\t\t\t\t\t\t\t\t\t\t\tSettings Page.\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\tdistributers?.map((dist, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={key} value={dist}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{dist}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tWhich category does this product belong\n\t\t\t\t\t\t\t\t\t\tto?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname='category'\n\t\t\t\t\t\t\t\t\t\tid='category-select'\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetItemData({\n\t\t\t\t\t\t\t\t\t\t\t\t...itemData,\n\t\t\t\t\t\t\t\t\t\t\t\tcategory: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option defaultValue selected disabled>\n\t\t\t\t\t\t\t\t\t\t\tSelect Category\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.length === 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tNo Categories Available - Set\n\t\t\t\t\t\t\t\t\t\t\t\tyour Categories on the Settings\n\t\t\t\t\t\t\t\t\t\t\t\tPage.\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\tcategories?.map((cat, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={key} value={cat}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{cat}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='save-quantity-m'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave This Item\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</center>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default Inventory;\n"]},"metadata":{},"sourceType":"module"}