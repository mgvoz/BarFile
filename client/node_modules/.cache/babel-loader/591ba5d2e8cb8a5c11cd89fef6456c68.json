{"ast":null,"code":"var _jsxFileName = \"/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createSettings, editSettings } from '../actions/settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Settings({\n  settings,\n  currentSettingId,\n  setCurrentSettingId\n}) {\n  _s();\n\n  var _user$result, _user$result2, _user$result3;\n\n  //set variables\n  const user = JSON.parse(localStorage.getItem('profile'));\n  var w = window.innerWidth;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [settingData, setSettingData] = useState({\n    nameOfUser: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name,\n    creator: (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.googleId) || (user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3._id),\n    createdAt: new Date().toDateString(),\n    distributers: [],\n    categories: [],\n    threshold: 0\n  }); //get current user's settings\n\n  const thisUsersSettings = settings.filter(s => {\n    var _user$result4, _user$result5;\n\n    return (user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4.googleId) === (s === null || s === void 0 ? void 0 : s.creator) || (user === null || user === void 0 ? void 0 : (_user$result5 = user.result) === null || _user$result5 === void 0 ? void 0 : _user$result5._id) === (s === null || s === void 0 ? void 0 : s.creator);\n  }); //save user setting input\n\n  const saveSettings = e => {\n    e.preventDefault();\n\n    if (thisUsersSettings.length === 0) {\n      var _user$result6, _user$result7, _user$result8;\n\n      dispatch(createSettings({\n        settingData\n      }));\n      setCurrentSettingId(0);\n      setSettingData({\n        nameOfUser: user === null || user === void 0 ? void 0 : (_user$result6 = user.result) === null || _user$result6 === void 0 ? void 0 : _user$result6.name,\n        creator: (user === null || user === void 0 ? void 0 : (_user$result7 = user.result) === null || _user$result7 === void 0 ? void 0 : _user$result7.googleId) || (user === null || user === void 0 ? void 0 : (_user$result8 = user.result) === null || _user$result8 === void 0 ? void 0 : _user$result8._id),\n        createdAt: new Date().toDateString(),\n        distributers: [],\n        categories: [],\n        threshold: 0\n      });\n      alert('Settings saved!');\n      history.push('/settings');\n    } else {\n      var _user$result9, _user$result10, _user$result11;\n\n      dispatch(editSettings(thisUsersSettings[0]._id, {\n        settingData\n      }));\n      setCurrentSettingId(0);\n      setSettingData({\n        nameOfUser: user === null || user === void 0 ? void 0 : (_user$result9 = user.result) === null || _user$result9 === void 0 ? void 0 : _user$result9.name,\n        creator: (user === null || user === void 0 ? void 0 : (_user$result10 = user.result) === null || _user$result10 === void 0 ? void 0 : _user$result10.googleId) || (user === null || user === void 0 ? void 0 : (_user$result11 = user.result) === null || _user$result11 === void 0 ? void 0 : _user$result11._id),\n        createdAt: new Date().toDateString(),\n        distributers: [],\n        categories: [],\n        threshold: 0\n      });\n      alert('Settings saved!');\n      history.push('/settings');\n    }\n  };\n\n  console.log(currentSettingId);\n  console.log(thisUsersSettings);\n  console.log(settingData); //populate text area with current settings if they exist, get settings to save and edit accurately\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: w > 480 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nav-section\",\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"dash-heading\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"dash-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"take-inventory\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"How will BarFile work for you?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: saveSettings,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"distributers\",\n                children: \"What distributers do you use to stock your bar? List them separated by commas.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"distributers\",\n                id: \"settings-textarea\",\n                cols: \"30\",\n                rows: \"5\",\n                value: settingData.distributers,\n                onChange: e => setSettingData({ ...settingData,\n                  distributers: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"threshold\",\n                children: \"What threshold would you like to use to indicate when it's time to reorder? (i.e. reorder when inventory for an item is 30% or less)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"threshold-input\",\n                type: \"text\",\n                name: \"threshold\",\n                id: \"settings-textarea\",\n                value: settingData.threshold,\n                onChange: e => setSettingData({ ...settingData,\n                  threshold: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 10\n              }, this), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"categories\",\n                children: \"What categories would you like to use to organize items for your bar? List them separated by commas.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"categories\",\n                id: \"settings-textarea\",\n                cols: \"30\",\n                rows: \"5\",\n                value: settingData.categories,\n                onChange: e => setSettingData({ ...settingData,\n                  categories: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"settings-button-desktop\",\n                type: \"submit\",\n                children: \"Save Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"take-inventory\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dash-heading-m\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"dash-line-m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"setting-subheading\",\n            children: \"How will BarFile work for you?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You'll be able to modify these settings at any time.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: saveSettings,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"distributers\",\n              children: \"What distributers do you use to stock your bar? List them separated by commas.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"distributers\",\n              id: \"settings-textarea\",\n              cols: \"30\",\n              rows: \"5\",\n              value: settingData.distributers,\n              onChange: e => setSettingData({ ...settingData,\n                distributers: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"threshold\",\n              children: \"What threshold would you like to use to indicate when it's time to reorder? (i.e. reorder when inventory for an item is 30% or less)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"threshold-input\",\n              type: \"text\",\n              name: \"threshold\",\n              id: \"settings-textarea\",\n              value: settingData.threshold,\n              onChange: e => setSettingData({ ...settingData,\n                threshold: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 9\n            }, this), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"categories\",\n              children: \"What categories would you like to use to organize items for your bar? List them separated by commas.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"categories\",\n              id: \"settings-textarea\",\n              cols: \"30\",\n              rows: \"5\",\n              value: settingData.categories,\n              onChange: e => setSettingData({ ...settingData,\n                categories: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"settings-button\",\n              type: \"submit\",\n              children: \"Save Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Settings, \"OA5DigLpKwAco61bxqrssA0cLrA=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Settings.js"],"names":["React","useState","Navbar","useDispatch","useHistory","createSettings","editSettings","Settings","settings","currentSettingId","setCurrentSettingId","user","JSON","parse","localStorage","getItem","w","window","innerWidth","dispatch","history","settingData","setSettingData","nameOfUser","result","name","creator","googleId","_id","createdAt","Date","toDateString","distributers","categories","threshold","thisUsersSettings","filter","s","saveSettings","e","preventDefault","length","alert","push","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createSettings, editSettings } from '../actions/settings';\n\nfunction Settings({ settings, currentSettingId, setCurrentSettingId }) {\n\t//set variables\n\tconst user = JSON.parse(localStorage.getItem('profile'));\n\tvar w = window.innerWidth;\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst [settingData, setSettingData] = useState({\n\t\tnameOfUser: user?.result?.name,\n\t\tcreator: user?.result?.googleId || user?.result?._id,\n\t\tcreatedAt: new Date().toDateString(),\n\t\tdistributers: [],\n\t\tcategories: [],\n\t\tthreshold: 0,\n\t});\n\n\t//get current user's settings\n\tconst thisUsersSettings = settings.filter(\n\t\t(s) =>\n\t\t\tuser?.result?.googleId === s?.creator ||\n\t\t\tuser?.result?._id === s?.creator,\n\t);\n\n\t//save user setting input\n\tconst saveSettings = (e) => {\n\t\te.preventDefault();\n\t\tif (thisUsersSettings.length === 0) {\n\t\t\tdispatch(\n\t\t\t\tcreateSettings({\n\t\t\t\t\tsettingData,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tsetCurrentSettingId(0);\n\t\t\tsetSettingData({\n\t\t\t\tnameOfUser: user?.result?.name,\n\t\t\t\tcreator: user?.result?.googleId || user?.result?._id,\n\t\t\t\tcreatedAt: new Date().toDateString(),\n\t\t\t\tdistributers: [],\n\t\t\t\tcategories: [],\n\t\t\t\tthreshold: 0,\n\t\t\t});\n\t\t\talert('Settings saved!');\n\t\t\thistory.push('/settings');\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\teditSettings(thisUsersSettings[0]._id, {\n\t\t\t\t\tsettingData,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tsetCurrentSettingId(0);\n\t\t\tsetSettingData({\n\t\t\t\tnameOfUser: user?.result?.name,\n\t\t\t\tcreator: user?.result?.googleId || user?.result?._id,\n\t\t\t\tcreatedAt: new Date().toDateString(),\n\t\t\t\tdistributers: [],\n\t\t\t\tcategories: [],\n\t\t\t\tthreshold: 0,\n\t\t\t});\n\t\t\talert('Settings saved!');\n\t\t\thistory.push('/settings');\n\t\t}\n\t};\n\n\tconsole.log(currentSettingId);\n\tconsole.log(thisUsersSettings);\n\tconsole.log(settingData);\n\n\t//populate text area with current settings if they exist, get settings to save and edit accurately\n\n\treturn (\n\t\t<>\n\t\t\t{w > 480 ? (\n\t\t\t\t<div className='settings-container'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div id='nav-section' className='col-2'>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-10'>\n\t\t\t\t\t\t\t<h1 className='dash-heading'>Settings</h1>\n\t\t\t\t\t\t\t<hr className='dash-line' />\n\t\t\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t\t\t<h4>How will BarFile work for you?</h4>\n\t\t\t\t\t\t\t\t<form onSubmit={saveSettings}>\n\t\t\t\t\t\t\t\t\t<label htmlFor='distributers'>\n\t\t\t\t\t\t\t\t\t\tWhat distributers do you use to stock\n\t\t\t\t\t\t\t\t\t\tyour bar? List them separated by commas.\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tname='distributers'\n\t\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\t\t\t\tvalue={settingData.distributers}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\t\tdistributers: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<label htmlFor='threshold'>\n\t\t\t\t\t\t\t\t\t\tWhat threshold would you like to use to\n\t\t\t\t\t\t\t\t\t\tindicate when it's time to reorder?\n\t\t\t\t\t\t\t\t\t\t(i.e. reorder when inventory for an item\n\t\t\t\t\t\t\t\t\t\tis 30% or less)\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName='threshold-input'\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='threshold'\n\t\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\t\tvalue={settingData.threshold}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\t\tthreshold: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t%\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<label htmlFor='categories'>\n\t\t\t\t\t\t\t\t\t\tWhat categories would you like to use to\n\t\t\t\t\t\t\t\t\t\torganize items for your bar? List them\n\t\t\t\t\t\t\t\t\t\tseparated by commas.\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tname='categories'\n\t\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\t\t\t\tvalue={settingData.categories}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\t\tcategories: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='settings-button-desktop'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave Settings\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t<h1 className='dash-heading-m'>Settings</h1>\n\t\t\t\t\t\t<hr className='dash-line-m' />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4 className='setting-subheading'>\n\t\t\t\t\t\t\t\tHow will BarFile work for you?\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tYou'll be able to modify these settings at any\n\t\t\t\t\t\t\t\ttime.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<form onSubmit={saveSettings}>\n\t\t\t\t\t\t\t\t<label htmlFor='distributers'>\n\t\t\t\t\t\t\t\t\tWhat distributers do you use to stock your\n\t\t\t\t\t\t\t\t\tbar? List them separated by commas.\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tname='distributers'\n\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\t\t\tvalue={settingData.distributers}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\tdistributers: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<label htmlFor='threshold'>\n\t\t\t\t\t\t\t\t\tWhat threshold would you like to use to\n\t\t\t\t\t\t\t\t\tindicate when it's time to reorder? (i.e.\n\t\t\t\t\t\t\t\t\treorder when inventory for an item is 30% or\n\t\t\t\t\t\t\t\t\tless)\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='threshold-input'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname='threshold'\n\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\tvalue={settingData.threshold}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\tthreshold: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t%\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<label htmlFor='categories'>\n\t\t\t\t\t\t\t\t\tWhat categories would you like to use to\n\t\t\t\t\t\t\t\t\torganize items for your bar? List them\n\t\t\t\t\t\t\t\t\tseparated by commas.\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tname='categories'\n\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\t\t\tvalue={settingData.categories}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\tcategories: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='settings-button'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave Settings\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}