{"ast":null,"code":"import _toConsumableArray from\"/Users/MarissaGvozdenovich/Desktop/BarFile/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{FETCH_ALL_SETTINGS,FETCH_ONE_SETTING,EDIT_SETTINGS,CREATE_SETTINGS,DELETE_SETTING}from'../constants/actionTypes';var reducers=function reducers(){var settings=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_ALL_SETTINGS:return action.payload;case FETCH_ONE_SETTING:return settings.map(function(setting){return setting._id===action.payload._id?action.payload:setting;});case CREATE_SETTINGS:return[].concat(_toConsumableArray(settings),[action.payload]);case EDIT_SETTINGS:return settings.map(function(setting){return setting._id===action.payload._id?action.payload:setting;});case DELETE_SETTING:return settings.filter(function(setting){return setting._id!==action.payload;});default:return settings;}};export default reducers;","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/reducers/settings.js"],"names":["FETCH_ALL_SETTINGS","FETCH_ONE_SETTING","EDIT_SETTINGS","CREATE_SETTINGS","DELETE_SETTING","reducers","settings","action","type","payload","map","setting","_id","filter"],"mappings":"4IAAA,OACCA,kBADD,CAECC,iBAFD,CAGCC,aAHD,CAICC,eAJD,CAKCC,cALD,KAMO,0BANP,CAQA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAA2B,IAA1BC,CAAAA,QAA0B,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CAC3C,OAAQA,MAAM,CAACC,IAAf,EACC,IAAKR,CAAAA,kBAAL,CACC,MAAOO,CAAAA,MAAM,CAACE,OAAd,CACD,IAAKR,CAAAA,iBAAL,CACC,MAAOK,CAAAA,QAAQ,CAACI,GAAT,CAAa,SAACC,OAAD,QACnBA,CAAAA,OAAO,CAACC,GAAR,GAAgBL,MAAM,CAACE,OAAP,CAAeG,GAA/B,CAAqCL,MAAM,CAACE,OAA5C,CAAsDE,OADnC,EAAb,CAAP,CAGD,IAAKR,CAAAA,eAAL,CACC,mCAAWG,QAAX,GAAqBC,MAAM,CAACE,OAA5B,GACD,IAAKP,CAAAA,aAAL,CACC,MAAOI,CAAAA,QAAQ,CAACI,GAAT,CAAa,SAACC,OAAD,QACnBA,CAAAA,OAAO,CAACC,GAAR,GAAgBL,MAAM,CAACE,OAAP,CAAeG,GAA/B,CAAqCL,MAAM,CAACE,OAA5C,CAAsDE,OADnC,EAAb,CAAP,CAGD,IAAKP,CAAAA,cAAL,CACC,MAAOE,CAAAA,QAAQ,CAACO,MAAT,CAAgB,SAACF,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBL,MAAM,CAACE,OAApC,EAAhB,CAAP,CACD,QACC,MAAOH,CAAAA,QAAP,CAhBF,CAkBA,CAnBD,CAqBA,cAAeD,CAAAA,QAAf","sourcesContent":["import {\n\tFETCH_ALL_SETTINGS,\n\tFETCH_ONE_SETTING,\n\tEDIT_SETTINGS,\n\tCREATE_SETTINGS,\n\tDELETE_SETTING,\n} from '../constants/actionTypes';\n\nconst reducers = (settings = [], action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_ALL_SETTINGS:\n\t\t\treturn action.payload;\n\t\tcase FETCH_ONE_SETTING:\n\t\t\treturn settings.map((setting) =>\n\t\t\t\tsetting._id === action.payload._id ? action.payload : setting,\n\t\t\t);\n\t\tcase CREATE_SETTINGS:\n\t\t\treturn [...settings, action.payload];\n\t\tcase EDIT_SETTINGS:\n\t\t\treturn settings.map((setting) =>\n\t\t\t\tsetting._id === action.payload._id ? action.payload : setting,\n\t\t\t);\n\t\tcase DELETE_SETTING:\n\t\t\treturn settings.filter((setting) => setting._id !== action.payload);\n\t\tdefault:\n\t\t\treturn settings;\n\t}\n};\n\nexport default reducers;\n"]},"metadata":{},"sourceType":"module"}