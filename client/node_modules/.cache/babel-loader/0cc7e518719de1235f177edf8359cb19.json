{"ast":null,"code":"var _jsxFileName = \"/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Suspense } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createSettings, editSettings, deleteSetting } from '../actions/settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CurrentSettings = /*#__PURE__*/React.lazy(_c = () => import('./CurrentSettings'));\n_c2 = CurrentSettings;\n\nfunction Settings({\n  settings\n}) {\n  _s();\n\n  //set variables\n  const user = JSON.parse(localStorage.getItem('profile'));\n  var w = window.innerWidth;\n  const dispatch = useDispatch();\n  const history = useHistory(); //get current user's settings\n\n  const thisUsersSettings = settings.filter(s => {\n    var _user$result, _user$result2;\n\n    return (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.googleId) === (s === null || s === void 0 ? void 0 : s.creator) || (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2._id) === (s === null || s === void 0 ? void 0 : s.creator);\n  }); //state to gather settings data\n\n  const [settingData, setSettingData] = useState({});\n  var timeOut;\n\n  const start = () => {\n    timeOut = setTimeout(() => {\n      var _user$result3, _user$result4, _user$result5, _thisUsersSettings$, _thisUsersSettings$2, _thisUsersSettings$3;\n\n      return setSettingData({\n        nameOfUser: user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name,\n        creator: (user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4.googleId) || (user === null || user === void 0 ? void 0 : (_user$result5 = user.result) === null || _user$result5 === void 0 ? void 0 : _user$result5._id),\n        createdAt: new Date().toDateString(),\n        distributers: (_thisUsersSettings$ = thisUsersSettings[0]) === null || _thisUsersSettings$ === void 0 ? void 0 : _thisUsersSettings$.distributers,\n        categories: (_thisUsersSettings$2 = thisUsersSettings[0]) === null || _thisUsersSettings$2 === void 0 ? void 0 : _thisUsersSettings$2.categories,\n        threshold: (_thisUsersSettings$3 = thisUsersSettings[0]) === null || _thisUsersSettings$3 === void 0 ? void 0 : _thisUsersSettings$3.threshold\n      });\n    }, 3000);\n    stop();\n  };\n\n  const stop = () => {\n    clearTimeout(timeOut);\n  };\n\n  start(); //MESS WITH THESE FUNCTIONS TO SAVE THE DATA NOW THAT THERE IS A SETTINGS BOX\n  //save user setting input\n\n  const saveSettings = () => {\n    if (thisUsersSettings.length > 0) {\n      dispatch(editSettings(thisUsersSettings[0]._id, { ...settingData\n      }));\n      alert('Settings saved!');\n      history.push('/settings');\n    } else {\n      dispatch(createSettings({\n        settingData\n      }));\n      alert('Settings saved!');\n      history.push('/settings');\n    }\n  }; //clear user's settings completely\n\n\n  const clearSettings = () => {\n    if (thisUsersSettings.length > 0) {\n      var _thisUsersSettings$4;\n\n      dispatch(deleteSetting((_thisUsersSettings$4 = thisUsersSettings[0]) === null || _thisUsersSettings$4 === void 0 ? void 0 : _thisUsersSettings$4._id));\n      alert('Settings cleared!');\n      window.location.reload();\n    } else if (thisUsersSettings.length === 0) {\n      alert('No settings created yet.');\n    }\n  };\n\n  console.log(settingData);\n  console.log(thisUsersSettings); //console.log(dist, cat, thres);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: w > 480 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nav-section\",\n          className: \"col-3\",\n          children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"dash-heading\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"dash-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"take-inventory\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"How will BarFile work for you?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading Settings...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 20\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(CurrentSettings, {\n                thisUsersSettings: thisUsersSettings\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: saveSettings,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"distributers\",\n                children: [\"What \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"distributers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 16\n                }, this), \" do you use to stock your bar? List them separated by commas.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"distributers\",\n                id: \"settings-textarea\",\n                cols: \"30\",\n                rows: \"5\",\n                value: settingData.distributers,\n                onChange: e => setSettingData({ ...settingData,\n                  distributers: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"threshold\",\n                children: [\"What \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"threshold\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 16\n                }, this), \" would you like to use to indicate when it's time to reorder? (i.e. reorder when inventory for an item is 30% or less)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"threshold-input\",\n                type: \"text\",\n                name: \"threshold\",\n                id: \"settings-textarea\",\n                value: settingData.threshold,\n                onChange: e => setSettingData({ ...settingData,\n                  threshold: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 10\n              }, this), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"categories\",\n                children: [\"What \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 16\n                }, this), \" would you like to use to organize items for your bar? List them separated by commas.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"categories\",\n                id: \"settings-textarea\",\n                cols: \"30\",\n                rows: \"5\",\n                value: settingData.categories,\n                onChange: e => setSettingData({ ...settingData,\n                  categories: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"settings-button-desktop\",\n                type: \"submit\",\n                children: \"Save Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"settings-button-desktop\",\n              id: \"clear-settings-btn\",\n              onClick: clearSettings,\n              children: \"Clear All Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"take-inventory\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dash-heading-m\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"dash-line-m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"How will BarFile work for you?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading Settings...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 28\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(CurrentSettings, {\n              thisUsersSettings: thisUsersSettings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: saveSettings,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"distributers\",\n              children: [\"What \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"distributers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 15\n              }, this), \" do you use to stock your bar? List them separated by commas.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"distributers\",\n              id: \"settings-textarea\",\n              cols: \"30\",\n              rows: \"5\",\n              value: settingData.distributers,\n              onChange: e => setSettingData({ ...settingData,\n                distributers: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"threshold\",\n              children: [\"What \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"threshold\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 15\n              }, this), \" would you like to use to indicate when it's time to reorder? (i.e. reorder when inventory for an item is 30% or less)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"threshold-input\",\n              type: \"text\",\n              name: \"threshold\",\n              id: \"settings-textarea\",\n              value: settingData.threshold,\n              onChange: e => setSettingData({ ...settingData,\n                threshold: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 9\n            }, this), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"categories\",\n              children: [\"What \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this), \" would you like to use to organize items for your bar? List them separated by commas.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"categories\",\n              id: \"settings-textarea\",\n              cols: \"30\",\n              rows: \"5\",\n              value: settingData.categories,\n              onChange: e => setSettingData({ ...settingData,\n                categories: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"settings-button\",\n              type: \"submit\",\n              children: \"Save Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"settings-button\",\n            id: \"clear-settings-btn-m\",\n            onClick: clearSettings,\n            children: \"Clear All Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Settings, \"wMJx6rNnU7MqvUvHs+6W2w93ilU=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c3 = Settings;\nexport default Settings;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CurrentSettings$React.lazy\");\n$RefreshReg$(_c2, \"CurrentSettings\");\n$RefreshReg$(_c3, \"Settings\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Settings.js"],"names":["React","useState","useEffect","Suspense","Navbar","useDispatch","useHistory","createSettings","editSettings","deleteSetting","CurrentSettings","lazy","Settings","settings","user","JSON","parse","localStorage","getItem","w","window","innerWidth","dispatch","history","thisUsersSettings","filter","s","result","googleId","creator","_id","settingData","setSettingData","timeOut","start","setTimeout","nameOfUser","name","createdAt","Date","toDateString","distributers","categories","threshold","stop","clearTimeout","saveSettings","length","alert","push","clearSettings","location","reload","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {\n\tcreateSettings,\n\teditSettings,\n\tdeleteSetting,\n} from '../actions/settings';\nconst CurrentSettings = React.lazy(() => import('./CurrentSettings'));\n\nfunction Settings({ settings }) {\n\t//set variables\n\tconst user = JSON.parse(localStorage.getItem('profile'));\n\tvar w = window.innerWidth;\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\t//get current user's settings\n\tconst thisUsersSettings = settings.filter(\n\t\t(s) =>\n\t\t\tuser?.result?.googleId === s?.creator ||\n\t\t\tuser?.result?._id === s?.creator,\n\t);\n\n\t//state to gather settings data\n\tconst [settingData, setSettingData] = useState({});\n\n\tvar timeOut;\n\tconst start = () => {\n\t\ttimeOut = setTimeout(\n\t\t\t() =>\n\t\t\t\tsetSettingData({\n\t\t\t\t\tnameOfUser: user?.result?.name,\n\t\t\t\t\tcreator: user?.result?.googleId || user?.result?._id,\n\t\t\t\t\tcreatedAt: new Date().toDateString(),\n\t\t\t\t\tdistributers: thisUsersSettings[0]?.distributers,\n\t\t\t\t\tcategories: thisUsersSettings[0]?.categories,\n\t\t\t\t\tthreshold: thisUsersSettings[0]?.threshold,\n\t\t\t\t}),\n\t\t\t3000,\n\t\t);\n\t\tstop();\n\t};\n\n\tconst stop = () => {\n\t\tclearTimeout(timeOut);\n\t};\n\n\tstart();\n\t//MESS WITH THESE FUNCTIONS TO SAVE THE DATA NOW THAT THERE IS A SETTINGS BOX\n\n\t//save user setting input\n\tconst saveSettings = () => {\n\t\tif (thisUsersSettings.length > 0) {\n\t\t\tdispatch(\n\t\t\t\teditSettings(thisUsersSettings[0]._id, {\n\t\t\t\t\t...settingData,\n\t\t\t\t}),\n\t\t\t);\n\t\t\talert('Settings saved!');\n\t\t\thistory.push('/settings');\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcreateSettings({\n\t\t\t\t\tsettingData,\n\t\t\t\t}),\n\t\t\t);\n\t\t\talert('Settings saved!');\n\t\t\thistory.push('/settings');\n\t\t}\n\t};\n\n\t//clear user's settings completely\n\tconst clearSettings = () => {\n\t\tif (thisUsersSettings.length > 0) {\n\t\t\tdispatch(deleteSetting(thisUsersSettings[0]?._id));\n\t\t\talert('Settings cleared!');\n\t\t\twindow.location.reload();\n\t\t} else if (thisUsersSettings.length === 0) {\n\t\t\talert('No settings created yet.');\n\t\t}\n\t};\n\n\tconsole.log(settingData);\n\tconsole.log(thisUsersSettings);\n\t//console.log(dist, cat, thres);\n\n\treturn (\n\t\t<>\n\t\t\t{w > 480 ? (\n\t\t\t\t<div className='settings-container'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div id='nav-section' className='col-3'>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-9'>\n\t\t\t\t\t\t\t<h1 className='dash-heading'>Settings</h1>\n\t\t\t\t\t\t\t<hr className='dash-line' />\n\t\t\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t\t\t<h3>How will BarFile work for you?</h3>\n\t\t\t\t\t\t\t\t<Suspense\n\t\t\t\t\t\t\t\t\tfallback={<div>Loading Settings...</div>}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CurrentSettings\n\t\t\t\t\t\t\t\t\t\tthisUsersSettings={thisUsersSettings}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t\t\t<form onSubmit={saveSettings}>\n\t\t\t\t\t\t\t\t\t<label htmlFor='distributers'>\n\t\t\t\t\t\t\t\t\t\tWhat <b>distributers</b> do you use to\n\t\t\t\t\t\t\t\t\t\tstock your bar? List them separated by\n\t\t\t\t\t\t\t\t\t\tcommas.\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tname='distributers'\n\t\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\t\t\t\tvalue={settingData.distributers}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\t\tdistributers: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<label htmlFor='threshold'>\n\t\t\t\t\t\t\t\t\t\tWhat <b>threshold</b> would you like to\n\t\t\t\t\t\t\t\t\t\tuse to indicate when it's time to\n\t\t\t\t\t\t\t\t\t\treorder? (i.e. reorder when inventory\n\t\t\t\t\t\t\t\t\t\tfor an item is 30% or less)\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName='threshold-input'\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='threshold'\n\t\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\t\tvalue={settingData.threshold}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\t\tthreshold: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t%\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<label htmlFor='categories'>\n\t\t\t\t\t\t\t\t\t\tWhat <b>categories</b> would you like to\n\t\t\t\t\t\t\t\t\t\tuse to organize items for your bar? List\n\t\t\t\t\t\t\t\t\t\tthem separated by commas.\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tname='categories'\n\t\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\t\t\t\tvalue={settingData.categories}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\t\tcategories: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='settings-button-desktop'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave Settings\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='settings-button-desktop'\n\t\t\t\t\t\t\t\t\tid='clear-settings-btn'\n\t\t\t\t\t\t\t\t\tonClick={clearSettings}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClear All Settings\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t<h1 className='dash-heading-m'>Settings</h1>\n\t\t\t\t\t\t<hr className='dash-line-m' />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>How will BarFile work for you?</h3>\n\t\t\t\t\t\t\t<Suspense fallback={<div>Loading Settings...</div>}>\n\t\t\t\t\t\t\t\t<CurrentSettings\n\t\t\t\t\t\t\t\t\tthisUsersSettings={thisUsersSettings}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t\t<form onSubmit={saveSettings}>\n\t\t\t\t\t\t\t\t<label htmlFor='distributers'>\n\t\t\t\t\t\t\t\t\tWhat <b>distributers</b> do you use to stock\n\t\t\t\t\t\t\t\t\tyour bar? List them separated by commas.\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tname='distributers'\n\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\t\t\tvalue={settingData.distributers}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\tdistributers: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<label htmlFor='threshold'>\n\t\t\t\t\t\t\t\t\tWhat <b>threshold</b> would you like to use\n\t\t\t\t\t\t\t\t\tto indicate when it's time to reorder? (i.e.\n\t\t\t\t\t\t\t\t\treorder when inventory for an item is 30% or\n\t\t\t\t\t\t\t\t\tless)\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='threshold-input'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname='threshold'\n\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\tvalue={settingData.threshold}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\tthreshold: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t%\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<label htmlFor='categories'>\n\t\t\t\t\t\t\t\t\tWhat <b>categories</b> would you like to use\n\t\t\t\t\t\t\t\t\tto organize items for your bar? List them\n\t\t\t\t\t\t\t\t\tseparated by commas.\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tname='categories'\n\t\t\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\t\t\tvalue={settingData.categories}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\t\t\tcategories: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='settings-button'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave Settings\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='settings-button'\n\t\t\t\t\t\t\t\tid='clear-settings-btn-m'\n\t\t\t\t\t\t\t\tonClick={clearSettings}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClear All Settings\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}