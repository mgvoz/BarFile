{"ast":null,"code":"import _objectSpread from\"/Users/MarissaGvozdenovich/Desktop/BarFile/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Suspense}from'react';import Navbar from'../Navbar/Navbar';var CurrentSettings=/*#__PURE__*/React.lazy(function(){return import('../CurrentSettings');});import{useDispatch}from'react-redux';import{deleteSetting}from'../../actions/settings';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SettingsMobile(_ref){var settings=_ref.settings,saveSettings=_ref.saveSettings,settingData=_ref.settingData,setSettingData=_ref.setSettingData;var dispatch=useDispatch();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"take-inventory\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"dash-heading-m\",children:\"Settings\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"dash-line-m\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"How will BarFile work for you?\"}),/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Loading Settings...\"}),children:/*#__PURE__*/_jsx(CurrentSettings,{settings:settings})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:saveSettings,children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"distributers\",children:[\"What \",/*#__PURE__*/_jsx(\"b\",{children:\"distributers\"}),\" do you use to stock your bar? List them separated by commas.\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{name:\"distributers\",id:\"settings-textarea\",cols:\"30\",rows:\"5\",placeholder:\"...\",value:settingData.distributers,onChange:function onChange(e){return setSettingData(_objectSpread(_objectSpread({},settingData),{},{distributers:e.target.value}));}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"threshold\",children:[\"What \",/*#__PURE__*/_jsx(\"b\",{children:\"threshold\"}),\" would you like to use to indicate when it's time to reorder? (i.e. reorder when inventory for an item is 0.3 or less)\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{className:\"threshold-input\",type:\"text\",name:\"threshold\",id:\"settings-textarea\",placeholder:\"...\",value:settingData.threshold,onChange:function onChange(e){return setSettingData(_objectSpread(_objectSpread({},settingData),{},{threshold:e.target.value}));}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"categories\",children:[\"What \",/*#__PURE__*/_jsx(\"b\",{children:\"categories\"}),\" would you like to use to organize items for your bar? List them separated by commas.\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{name:\"categories\",id:\"settings-textarea\",cols:\"30\",rows:\"5\",placeholder:\"...\",value:settingData.categories,onChange:function onChange(e){return setSettingData(_objectSpread(_objectSpread({},settingData),{},{categories:e.target.value}));}}),/*#__PURE__*/_jsx(\"button\",{className:\"settings-button\",type:\"submit\",children:\"Save Settings\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"settings-button\",id:\"clear-settings-btn-m\",onClick:function onClick(){var _settings$;dispatch(deleteSetting((_settings$=settings[0])===null||_settings$===void 0?void 0:_settings$._id)).then(function(){setSettingData({});alert('Settings cleared!');}).then(function(){return window.location.reload();});},children:\"Clear All Settings\"})]})]})]});}export default SettingsMobile;","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Settings/SettingsMobile.js"],"names":["React","Suspense","Navbar","CurrentSettings","lazy","useDispatch","deleteSetting","SettingsMobile","settings","saveSettings","settingData","setSettingData","dispatch","distributers","e","target","value","threshold","categories","_id","then","alert","window","location","reload"],"mappings":"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","sourcesContent":["import React, { Suspense } from 'react';\nimport Navbar from '../Navbar/Navbar';\nconst CurrentSettings = React.lazy(() => import('../CurrentSettings'));\nimport { useDispatch } from 'react-redux';\nimport { deleteSetting } from '../../actions/settings';\n\nfunction SettingsMobile({\n\tsettings,\n\tsaveSettings,\n\tsettingData,\n\tsetSettingData,\n}) {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<>\n\t\t\t<Navbar />\n\t\t\t<div className='take-inventory'>\n\t\t\t\t<h1 className='dash-heading-m'>Settings</h1>\n\t\t\t\t<hr className='dash-line-m' />\n\t\t\t\t<div>\n\t\t\t\t\t<h3>How will BarFile work for you?</h3>\n\t\t\t\t\t<Suspense fallback={<div>Loading Settings...</div>}>\n\t\t\t\t\t\t<CurrentSettings settings={settings} />\n\t\t\t\t\t</Suspense>\n\t\t\t\t\t<form onSubmit={saveSettings}>\n\t\t\t\t\t\t<label htmlFor='distributers'>\n\t\t\t\t\t\t\tWhat <b>distributers</b> do you use to stock your\n\t\t\t\t\t\t\tbar? List them separated by commas.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname='distributers'\n\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\tplaceholder='...'\n\t\t\t\t\t\t\tvalue={settingData.distributers}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\tdistributers: e.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label htmlFor='threshold'>\n\t\t\t\t\t\t\tWhat <b>threshold</b> would you like to use to\n\t\t\t\t\t\t\tindicate when it's time to reorder? (i.e. reorder\n\t\t\t\t\t\t\twhen inventory for an item is 0.3 or less)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='threshold-input'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='threshold'\n\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\tplaceholder='...'\n\t\t\t\t\t\t\tvalue={settingData.threshold}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\tthreshold: e.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label htmlFor='categories'>\n\t\t\t\t\t\t\tWhat <b>categories</b> would you like to use to\n\t\t\t\t\t\t\torganize items for your bar? List them separated by\n\t\t\t\t\t\t\tcommas.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname='categories'\n\t\t\t\t\t\t\tid='settings-textarea'\n\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t\tplaceholder='...'\n\t\t\t\t\t\t\tvalue={settingData.categories}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetSettingData({\n\t\t\t\t\t\t\t\t\t...settingData,\n\t\t\t\t\t\t\t\t\tcategories: e.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t<button className='settings-button' type='submit'>\n\t\t\t\t\t\t\tSave Settings\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='settings-button'\n\t\t\t\t\t\tid='clear-settings-btn-m'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(deleteSetting(settings[0]?._id))\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tsetSettingData({});\n\t\t\t\t\t\t\t\t\talert('Settings cleared!');\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then(() => window.location.reload());\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tClear All Settings\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default SettingsMobile;\n"]},"metadata":{},"sourceType":"module"}