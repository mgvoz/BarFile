{"ast":null,"code":"var _jsxFileName = \"/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { saveItem, editItem, deleteItem } from '../actions/inventory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Inventory({\n  settings\n}) {\n  _s();\n\n  var _thisUsersSettings$, _thisUsersSettings$2, _thisUsersSettings$di, _thisUsersSettings$3, _thisUsersSettings$4;\n\n  //set variables\n  var w = window.innerWidth;\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [scannedItems, setScannedItems] = useState([]); //get current user's settings\n\n  const thisUsersSettings = settings.filter(s => {\n    var _user$result, _user$result2;\n\n    return (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.googleId) === (s === null || s === void 0 ? void 0 : s.creator) || (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2._id) === (s === null || s === void 0 ? void 0 : s.creator);\n  }); //access camera on device and stream\n\n  var video = document.getElementById('video');\n\n  const getVideoStream = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      document.getElementById('video').srcObject = stream;\n    }).catch(error => console.log(error));\n  };\n\n  let formats;\n  window.BarcodeDetector.getSupportedFormats().then(arr => formats = arr);\n  const barcodeDetector = new window.BarcodeDetector({\n    formats\n  });\n\n  const findBarcode = () => {\n    barcodeDetector.detect(document.getElementById('video')).then(data => {\n      if (data.length > 0) {\n        setScannedItems([...scannedItems, data[0].rawValue]);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  setInterval(findBarcode, 3000); //slider\n\n  const saveItem = () => {\n    //add code to save to DB\n    alert('Item quantity saved successfully.');\n  };\n\n  console.log(thisUsersSettings);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: w > 480 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nav-section\",\n          className: \"col-3\",\n          children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"dash-heading\",\n            children: \"Take Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"dash-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"take-inventory\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"barcode-p\",\n              children: \"Scan barcode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n              children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                id: \"video\",\n                className: \"video-view\",\n                autoPlay: true,\n                onCanPlay: getVideoStream(),\n                children: \"Video stream not available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"barcode-p\",\n                children: \"Scanned item(s):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-info\",\n                children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                  children: scannedItems.map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"info-text\",\n                    children: '  ' + item\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 13\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-scans\",\n                onClick: () => setScannedItems([]),\n                children: \"Clear Scanned Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"set-amt\",\n                children: [\"Click on a scanned item above, and use the slider below to represent quantity remaining. If the quantity remaining is at or below your set threshold, this item will be added to you order list.\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"Your threshold is currently\", ' ', ((_thisUsersSettings$ = thisUsersSettings[0]) === null || _thisUsersSettings$ === void 0 ? void 0 : _thisUsersSettings$.threshold) === undefined ? 'unspecified. Please go to Settings to set your threshold' : ((_thisUsersSettings$2 = thisUsersSettings[0]) === null || _thisUsersSettings$2 === void 0 ? void 0 : _thisUsersSettings$2.threshold) + '%', \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btl-img\",\n                  children: \"(bottle shape and slider here, onClick of item above, show bottle shape, store item info and quatity to DB)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Which distributer do you typically order this product from?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"distributer\",\n                  id: \"distributer-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    defaultValue: true,\n                    selected: true,\n                    disabled: true,\n                    children: \"Select Distributer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 12\n                  }, this), (thisUsersSettings === null || thisUsersSettings === void 0 ? void 0 : thisUsersSettings.length) === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"No Distributers Available - Set your Distributers on the Settings Page.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 13\n                  }, this) : thisUsersSettings === null || thisUsersSettings === void 0 ? void 0 : (_thisUsersSettings$di = thisUsersSettings.distributers) === null || _thisUsersSettings$di === void 0 ? void 0 : _thisUsersSettings$di.map((dist, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: dist === null || dist === void 0 ? void 0 : dist.title\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 15\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"save-quantity\",\n                  onClick: saveItem,\n                  children: \"Save This Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inventory-container-m\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dash-heading-m\",\n          children: \"Take Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"dash-line-m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"take-inventory\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"barcode-p\",\n            children: \"Scan barcode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              id: \"video\",\n              className: \"video-view\",\n              autoPlay: true,\n              onCanPlay: getVideoStream(),\n              children: \"Video stream not available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"barcode-p\",\n              children: \"Scanned item(s):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-info\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                children: scannedItems.map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"info-text\",\n                  children: '  ' + item\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 12\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-scans-m\",\n              onClick: () => setScannedItems([]),\n              children: \"Clear Scanned Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"set-amt-m\",\n              children: [\"Click on a scanned item above, and use the slider below to represent quantity remaining. If the quantity remaining is at or below your set threshold, this item will be added to you order list.\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Your threshold is currently\", ' ', ((_thisUsersSettings$3 = thisUsersSettings[0]) === null || _thisUsersSettings$3 === void 0 ? void 0 : _thisUsersSettings$3.threshold) === undefined ? 'unspecified. Please go to Settings to set your threshold' : ((_thisUsersSettings$4 = thisUsersSettings[0]) === null || _thisUsersSettings$4 === void 0 ? void 0 : _thisUsersSettings$4.threshold) + '%', \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btl-img\",\n                children: \"(bottle shape and slider here, onClick of item above, show bottle shape, store item info and quatity to DB)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-quantity-m\",\n              onClick: saveItem,\n              children: \"Save This Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Inventory, \"biDeg9FcS1ylkt3IAa8NML2+jcg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Inventory;\nexport default Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/Desktop/BarFile/client/src/components/Inventory.js"],"names":["React","useState","Navbar","useDispatch","saveItem","editItem","deleteItem","Inventory","settings","w","window","innerWidth","dispatch","user","JSON","parse","localStorage","getItem","scannedItems","setScannedItems","thisUsersSettings","filter","s","result","googleId","creator","_id","video","document","getElementById","getVideoStream","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","error","console","log","formats","BarcodeDetector","getSupportedFormats","arr","barcodeDetector","findBarcode","detect","data","length","rawValue","e","setInterval","alert","map","item","key","threshold","undefined","distributers","dist","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { useDispatch } from 'react-redux';\nimport { saveItem, editItem, deleteItem } from '../actions/inventory';\n\nfunction Inventory({ settings }) {\n\t//set variables\n\tvar w = window.innerWidth;\n\tconst dispatch = useDispatch();\n\tconst user = JSON.parse(localStorage.getItem('profile'));\n\tconst [scannedItems, setScannedItems] = useState([]);\n\n\t//get current user's settings\n\tconst thisUsersSettings = settings.filter(\n\t\t(s) =>\n\t\t\tuser?.result?.googleId === s?.creator ||\n\t\t\tuser?.result?._id === s?.creator,\n\t);\n\n\t//access camera on device and stream\n\tvar video = document.getElementById('video');\n\n\tconst getVideoStream = () => {\n\t\tnavigator.mediaDevices\n\t\t\t.getUserMedia({ video: true })\n\t\t\t.then((stream) => {\n\t\t\t\tdocument.getElementById('video').srcObject = stream;\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n\n\tlet formats;\n\twindow.BarcodeDetector.getSupportedFormats().then((arr) => (formats = arr));\n\tconst barcodeDetector = new window.BarcodeDetector({ formats });\n\n\tconst findBarcode = () => {\n\t\tbarcodeDetector\n\t\t\t.detect(document.getElementById('video'))\n\t\t\t.then((data) => {\n\t\t\t\tif (data.length > 0) {\n\t\t\t\t\tsetScannedItems([...scannedItems, data[0].rawValue]);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\tsetInterval(findBarcode, 3000);\n\n\t//slider\n\n\tconst saveItem = () => {\n\t\t//add code to save to DB\n\t\talert('Item quantity saved successfully.');\n\t};\n\n\tconsole.log(thisUsersSettings);\n\treturn (\n\t\t<>\n\t\t\t{w > 480 ? (\n\t\t\t\t<div className='inventory-container'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div id='nav-section' className='col-3'>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='col-9'>\n\t\t\t\t\t\t\t<h1 className='dash-heading'>Take Inventory</h1>\n\t\t\t\t\t\t\t<hr className='dash-line' />\n\t\t\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t\t\t<p className='barcode-p'>Scan barcode:</p>\n\t\t\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\t\tid='video'\n\t\t\t\t\t\t\t\t\t\tclassName='video-view'\n\t\t\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\t\t\tonCanPlay={getVideoStream()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tVideo stream not available.\n\t\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t\t<p className='barcode-p'>\n\t\t\t\t\t\t\t\t\t\tScanned item(s):\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<div className='item-info'>\n\t\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t\t{scannedItems.map((item, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='info-text'\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{'  ' + item}\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='clear-scans'\n\t\t\t\t\t\t\t\t\t\tonClick={() => setScannedItems([])}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tClear Scanned Items\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<div className='set-amt'>\n\t\t\t\t\t\t\t\t\t\tClick on a scanned item above, and use\n\t\t\t\t\t\t\t\t\t\tthe slider below to represent quantity\n\t\t\t\t\t\t\t\t\t\tremaining. If the quantity remaining is\n\t\t\t\t\t\t\t\t\t\tat or below your set threshold, this\n\t\t\t\t\t\t\t\t\t\titem will be added to you order list.{' '}\n\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\tYour threshold is currently{' '}\n\t\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.threshold ===\n\t\t\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t\t\t\t\t? 'unspecified. Please go to Settings to set your threshold'\n\t\t\t\t\t\t\t\t\t\t\t\t: thisUsersSettings[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t?.threshold + '%'}\n\t\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t\t\t<div className='btl-img'>\n\t\t\t\t\t\t\t\t\t\t\t(bottle shape and slider here,\n\t\t\t\t\t\t\t\t\t\t\tonClick of item above, show bottle\n\t\t\t\t\t\t\t\t\t\t\tshape, store item info and quatity\n\t\t\t\t\t\t\t\t\t\t\tto DB)\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tWhich distributer do you typically\n\t\t\t\t\t\t\t\t\t\t\torder this product from?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tname='distributer'\n\t\t\t\t\t\t\t\t\t\t\tid='distributer-select'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue\n\t\t\t\t\t\t\t\t\t\t\t\tselected\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect Distributer\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t{thisUsersSettings?.length === 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<option disabled>\n\t\t\t\t\t\t\t\t\t\t\t\t\tNo Distributers Available -\n\t\t\t\t\t\t\t\t\t\t\t\t\tSet your Distributers on the\n\t\t\t\t\t\t\t\t\t\t\t\t\tSettings Page.\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\tthisUsersSettings?.distributers?.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(dist, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{dist?.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='save-quantity'\n\t\t\t\t\t\t\t\t\t\t\tonClick={saveItem}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave This Item\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</center>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<div className='inventory-container-m'>\n\t\t\t\t\t\t<h1 className='dash-heading-m'>Take Inventory</h1>\n\t\t\t\t\t\t<hr className='dash-line-m' />\n\t\t\t\t\t\t<div className='take-inventory'>\n\t\t\t\t\t\t\t<p className='barcode-p'>Scan barcode:</p>\n\t\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\tid='video'\n\t\t\t\t\t\t\t\t\tclassName='video-view'\n\t\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\t\tonCanPlay={getVideoStream()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tVideo stream not available.\n\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t<p className='barcode-p'>Scanned item(s):</p>\n\t\t\t\t\t\t\t\t<div className='item-info'>\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t{scannedItems.map((item, key) => (\n\t\t\t\t\t\t\t\t\t\t\t<li className='info-text' key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t{'  ' + item}\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='clear-scans-m'\n\t\t\t\t\t\t\t\t\tonClick={() => setScannedItems([])}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClear Scanned Items\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<div className='set-amt-m'>\n\t\t\t\t\t\t\t\t\tClick on a scanned item above, and use the\n\t\t\t\t\t\t\t\t\tslider below to represent quantity\n\t\t\t\t\t\t\t\t\tremaining. If the quantity remaining is at\n\t\t\t\t\t\t\t\t\tor below your set threshold, this item will\n\t\t\t\t\t\t\t\t\tbe added to you order list.{' '}\n\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\tYour threshold is currently{' '}\n\t\t\t\t\t\t\t\t\t\t{thisUsersSettings[0]?.threshold ===\n\t\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t\t\t\t? 'unspecified. Please go to Settings to set your threshold'\n\t\t\t\t\t\t\t\t\t\t\t: thisUsersSettings[0]?.threshold +\n\t\t\t\t\t\t\t\t\t\t\t  '%'}\n\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t\t<div className='btl-img'>\n\t\t\t\t\t\t\t\t\t\t(bottle shape and slider here, onClick\n\t\t\t\t\t\t\t\t\t\tof item above, show bottle shape, store\n\t\t\t\t\t\t\t\t\t\titem info and quatity to DB)\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='save-quantity-m'\n\t\t\t\t\t\t\t\t\tonClick={saveItem}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave This Item\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</center>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default Inventory;\n"]},"metadata":{},"sourceType":"module"}